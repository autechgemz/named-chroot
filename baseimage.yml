---
- name: Ansible Provision
  hosts: all
  vars_files:
    - vars.yml
  tasks:
    - name: General setting
      block:
        - name: Install tzdata
          ansible.builtin.apt:
            name:
              - tzdata
              - ca-certificates
            install_recommends: false
            update_cache: true
            state: present
        - name: Print timezone
          ansible.builtin.debug:
            var: timezone
        - name: Change timezone setting
          ansible.builtin.file:
            src: "/usr/share/zoneinfo/{{ timezone }}"
            dest: /etc/localtime
            state: link
            force: true
        - name: Install container-dependencies
          ansible.builtin.apt:
            name:
              - runit
              - wget
              - gosu
            install_recommends: false
            update_cache: true
            state: present
        - name: Install build-dependencies
          ansible.builtin.apt:
            name:
              - build-essential
              - automake
              - autoconf
              - libtool
              - git
              - tar
              - golang
            install_recommends: true
            update_cache: true
            state: present
        - name: Install library-dependencies
          ansible.builtin.apt:
            name:
              - libfstrm-dev
              - protobuf-c-compiler
              - libprotobuf-dev
              - libprotobuf-c-dev
              - libssl-dev
              - libexpat1-dev
              - libxml2-dev
              - python3-ply
              - python3-dev
              - libgcc1
              - libuv1-dev
              - libcap-dev
              - libjson-c-dev
              - libevent-dev
              - libnghttp2-dev
            update_cache: true
            state: present
    - name: Create named user
      block:
        - name: Create named group
          ansible.builtin.group:
            name: "{{ named_user }}"
            system: true
            state: present
        - name: Create named user
          ansible.builtin.user:
            name: "{{ named_user }}"
            comment: "named server"
            group: "{{ named_user }}"
            home: "{{ named_datadir }}"
            system: true
            shell: /sbin/nologin
        - name: Install named
          block:
            - name: Create base directory
              ansible.builtin.file:
                path: "{{ named_root }}"
                owner: named
                group: named
                mode: '0755'
                state: directory
            - name: Download named tarball
              ansible.builtin.get_url:
                url: "https://ftp.isc.org/isc/bind9/{{ named_version }}/bind-{{ named_version }}.tar.xz"
                dest: "{{ named_root }}/bind-{{ named_version }}.tar.xz"
                mode: '0644'
            - name: Extract named tarball
              ansible.builtin.unarchive:
                src: "{{ named_root }}/bind-{{ named_version }}.tar.xz"
                dest: "{{ named_root }}"
                copy: false
            - name: Configure named
              ansible.builtin.shell: |
                ./configure \
                --prefix={{ named_root }} \
                --sysconfdir={{ named_confdir }} \
                --localstatedir=/var \
                --with-openssl=/usr \
                --enable-linux-caps \
                --with-libxml2 \
                --with-libjson \
                --enable-shared \
                --with-libtool \
                --with-tuning=large \
                --enable-dnstap
              args:
                chdir: "{{ named_root }}/bind-{{ named_version }}/"
                creates: "{{ named_root }}/bind-{{ named_version }}/config.log"
            - name: Build named
              community.general.make:
                chdir: "{{ named_root }}/bind-{{ named_version }}/"
            - name: Install named
              community.general.make:
                chdir: "{{ named_root }}/bind-{{ named_version }}/"
                target: install
            - name: Build golang-dnstap
              ansible.builtin.shell: |
                go install github.com/dnstap/golang-dnstap/dnstap@latest
                exit 0
              args:
                chdir: "{{ named_root }}"
                creates: "{{ named_root }}/bin/dnstap"
              environment:
                GOPATH: "{{ named_root }}"
            - name: Remove source files
              ansible.builtin.file:
                path: "{{ item }}"
                force: true
                state: absent
              with_items:
                - "{{ named_root }}/bind-{{ named_version }}"
                - "{{ named_root }}/bind-{{ named_version }}.tar.xz"
                - "{{ named_root }}/src"
                - "{{ named_root }}/pkg"
            - name: Remove build-dependencies package
              ansible.builtin.apt:
                name:
                  - build-essential
                  - automake
                  - autoconf
                  - libtool
                  - git
                  - golang
                  - xz-utils
                  - bzip2
                  - protobuf-c-compiler
                  - python3-ply
                  - python3-dev
                  - python3-apt
                install_recommends: false
                autoremove: true
                autoclean: true
                purge: true
                state: absent
